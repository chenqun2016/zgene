def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.divms.app"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

   manifestPlaceholders = [
        app_name: "Z基因",
        JPUSH_PKGNAME : applicationId,
        JSHARE_PKGNAME : applicationId,
        JPUSH_APPKEY : "29b5893fb872d08ede259829", // NOTE: JPush 上注册的包名对应的 Appkey.
        JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
         TENCENT_APPID : "",//腾讯开放平台注册应用得到的
        FACEBOOK_APPID : "",//facebook注册应用得到的appId
        
        ]


        // ndk {
        //     // 设置支持的SO库架构
        //     abiFilters 'armeabi-v7a'
        // }
    }

    signingConfigs {

        release {
            storeFile file(localProperties.getProperty('storeFile'))
            storePassword localProperties.getProperty('storePassword')
            keyAlias localProperties.getProperty('keyAlias')
            keyPassword localProperties.getProperty('keyPassword')
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            //开启混淆
            minifyEnabled true
            //开启资源压缩
            shrinkResources true
            //开启zip对齐
            zipAlignEnabled true
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    //noinspection GradleDependency
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

     implementation 'cn.jiguang.sdk:jshare:2.0.0'  // 此处以JShare 1.6.0 版本为例，具体版本请参考压缩包libs的jar包版本。
    implementation 'cn.jiguang.sdk:jshare-qqmodel:2.0.0'  // 此处以jshare-qqmodel 1.6.0  版本为例，具体版本请参考压缩包libs的jar包版本。
    implementation 'cn.jiguang.sdk:jshare-wechatmodel:2.0.0'  // 此处以jshare-wechatmodel 1.6.0  版本为例，具体版本请参考压缩包libs的jar包版本。
    implementation 'cn.jiguang.sdk:jshare-sinamodel:2.0.0'  // 此处以jshare-sinamodel 1.6.0  版本为例，具体版本请参考压缩包libs的jar包版本。
    implementation 'cn.jiguang.sdk:jcore:2.8.2'  // 此处以JCo
}
